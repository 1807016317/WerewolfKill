{"version":3,"sources":["assets\\Script\\serverConnect\\Http.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\r\n*   title: Http\r\n*\tdesc: Http 请求\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/06/17 \r\n*/\r\n\r\nlet serverUrl = \"https://www.oldwang.top:9001\";\r\n\r\nlet master_url = null;\r\nlet url = null;\r\nlet token = null;\r\nlet outTimesMax = 20; //设置超时重试次数最大为20\r\nlet outTimes = 0;\r\n\r\ninit();\r\n\r\nfunction init() {\r\n    master_url = serverUrl;\r\n    url = serverUrl;\r\n};\r\n\r\n/**\r\n* \r\n* @param url \r\n*/\r\nexport function setURL(url) {\r\n    serverUrl = url;\r\n    init();\r\n};\r\n\r\n/**\r\n* \r\n* @param path \r\n* @param data \r\n* @param handler \r\n* @param extraUrl \r\n*/\r\nexport function sendRequest(path, data, handler, extraUrl): XMLHttpRequest {\r\n    let xhr = cc.loader.getXMLHttpRequest();\r\n    xhr.timeout = 5000;\r\n\r\n    if (data == null) {\r\n        data = {};\r\n    }\r\n    if (token) {\r\n        data.token = token;\r\n    }\r\n\r\n    if (extraUrl == null) {\r\n        extraUrl = url;\r\n    }\r\n\r\n    //解析请求路由以及格式化请求参数\r\n    let sendpath = path;\r\n    let sendtext = '?';\r\n    function praseData(data, sendtext) {\r\n        for (let k in data) {\r\n            if (sendtext != \"?\") {\r\n                sendtext += \"&\";\r\n            }\r\n            if (data.hasOwnProperty(k)) {\r\n                if (typeof data[k] === 'object' && data[k] !== null) {\r\n                    sendtext += (k + \"=\" + JSON.stringify(data[k]));\r\n                } else {\r\n                    sendtext += (k + \"=\" + data[k]);\r\n                }\r\n            }\r\n        }\r\n        return sendtext;\r\n    }\r\n    sendtext = praseData(data, sendtext);\r\n\r\n    //组装完整的URL\r\n    let requestURL = extraUrl + sendpath + encodeURI(sendtext);\r\n\r\n    //发送请求\r\n    console.log(\"RequestURL:\" + requestURL);\r\n    //open 初始化一个请求\r\n    xhr.open(\"GET\", requestURL, true);\r\n\r\n    if (cc.sys.isNative) {\r\n        //设置 HTTP 请求头的值。必须在 open() 之后、send() 之前调用\r\n        xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n    }\r\n\r\n\r\n    function retryFunc() {\r\n        sendRequest(path, data, handler, extraUrl);\r\n        outTimes++;\r\n    };\r\n\r\n    let timer = setTimeout(function () {\r\n        xhr[\"hasRetried\"] = true;\r\n        //abort 如果请求已被发出，则立刻中止请求\r\n        xhr.abort();\r\n        console.log('http timeout, retry');\r\n        if (outTimes <= outTimesMax) {\r\n            retryFunc();\r\n        } else {\r\n            console.log(\"retry stop, fails!!!\");\r\n            outTimes = 0;\r\n        }\r\n    }, 5000);\r\n\r\n    xhr.onreadystatechange = function () {\r\n        console.log(\"当 readyState 属性发生变化时，调用的处理程序\");\r\n        clearTimeout(timer);\r\n        let ret = null;\r\n        //成功的回应，status（200– 299）\r\n        if (xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)) {\r\n            // console.log(\"http res(\" + xhr.responseText.length + \"):\" + xhr.responseText);\r\n            cc.log(\"request from [\" + xhr.responseURL + \"] data [\", ret, \"]\");\r\n            let respText = xhr.responseText;\r\n\r\n            try {\r\n                ret = JSON.parse(respText);\r\n            } catch (e) {\r\n                console.log(\"err:\" + e);\r\n                ret = {\r\n                    errcode: -10001,\r\n                    errmsg: e\r\n                };\r\n            }\r\n\r\n            if (handler) {\r\n                handler(ret);\r\n            }\r\n\r\n            handler = null;\r\n        }\r\n        else if (xhr.readyState === 4) {\r\n            if (xhr[\"hasRetried\"]) {\r\n                return;\r\n            }\r\n\r\n            console.log('other readystate == 4' + ', status:' + xhr.status);\r\n            setTimeout(function () {\r\n                retryFunc();\r\n            }, 5000);\r\n        }\r\n        else {\r\n            console.log('other readystate:' + xhr.readyState + ', status:' + xhr.status);\r\n        }\r\n    };\r\n\r\n    try {\r\n        //发送请求。如果请求是异步的（默认），那么该方法将在请求发送后立即返回\r\n        xhr.send();\r\n    }\r\n    catch (e) {\r\n        //setTimeout(retryFunc, 200);\r\n        retryFunc();\r\n    }\r\n\r\n    return xhr;\r\n};\r\n\r\n"]}