{"version":3,"sources":["assets/Script/manager/AppMgr.ts","assets/Script/components/AppStart.ts","assets/Script/manager/EventHandle.ts","assets/Script/components/GameHall.ts","assets/Script/manager/Global.ts","assets/Script/serverConnect/HttpReqMgr.ts","assets/Script/serverConnect/Http.ts","assets/Script/components/Login.ts","assets/Script/components/Preset.ts","assets/Script/components/RoomMgr.ts","assets/Script/components/Selfset.ts","assets/Script/tools/Tools.ts","assets/Script/manager/UserMgr.ts","assets/Script/tools/methodID.ts"],"names":["appMgr_Instance","g_Mgr","require","Http","HttpReqMgr_1","UserMgr_1","EventHandle_1","AppMgr","this","initMgr","getInstance","undefined","prototype","urlParse","params","window","location","name","value","str","href","num","indexOf","substr","arr","split","i","length","substring","cc","console","log","default","AppMgr_1","_a","_decorator","ccclass","property","AppStart","_super","__extends","_this","apply","arguments","hall","login","onLoad","active","start","__decorate","Node","Component","exports","EventHandle","isNull","key","eventArr","addEvent","callback","deleteEventByKey","clearAllEvent","emitEvent","GameHall","preset","setBySelf","cardIntroduce","userName","userPic","setUserInfo","bind","selectPreset","selectSetBySelf","onCradDescrible","offCradDescrible","self","string","properties","loader","load","url","avatarUrl","type","err","tex","spriteFrame","SpriteFrame","Label","Sprite","module","HttpReqMgr","http","reqWxMiniLogin","code","sendRequest","os","reqWxUserInfo","userInfo","reqCardOfPreset","playerNum","serverUrl","master_url","token","outTimesMax","outTimes","init","setURL","path","data","handler","extraUrl","xhr","getXMLHttpRequest","timeout","sendpath","sendtext","praseData","k","__proto__","requestURL","encodeURI","open","sys","isNative","setRequestHeader","retryFunc","timer","setTimeout","abort","onreadystatechange","clearTimeout","ret","readyState","status","responseURL","respText","responseText","JSON","parse","e","errcode","errmsg","send","Tools_1","methodID_1","Login","button","toGameHall","onLogin","wxLogin","node","Button","Slider","playerNumLab","selectPlayerNum","progress","addPlayer","toFixed","Number","String","getCard","req","res","close","RoomMgr","playerScrollView","roomNum","player","playerPool","newPlayerPool","instantiate","push","playerJoinRoom","ScrollView","Prefab","Selfset","label","Tools","methodID","msg","Error","UserMgr","openid","sex","lv","exp","coins","gems","sign","ip","roomData","oldRoomId","address","country","province","city","wx","success","getAuthorize","extraJson","retcode","errMsg","getSetting","authSetting","authorize","scope","getUserInfo","nickName","gender","saveUserIfo","getUserIfo","fail"],"mappings":"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","sourcesContent":["/*\r\n*\ttitle: AppMgr\r\n*\tdesc: 应用管理\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/06/17 \r\n*/\r\nlet appMgr_Instance = null;\r\n\r\nimport g_Mgr = require(\"./Global\");\r\nimport Http = require(\"../serverConnect/Http\");\r\nimport HttpReqMgr from \"../serverConnect/HttpReqMgr\";\r\nimport UserMgr from \"./UserMgr\";\r\nimport EventHandle from \"./EventHandle\";\r\n\r\nexport default class AppMgr {\r\n    private constructor(){\r\n        this.initMgr();\r\n    }\r\n\r\n    static getInstance(){\r\n        if(appMgr_Instance == null || appMgr_Instance == undefined){\r\n            appMgr_Instance = new AppMgr();\r\n            return appMgr_Instance;\r\n        }\r\n        return appMgr_Instance;\r\n    }\r\n\r\n    /**\r\n     * URL 解析\r\n     */\r\n    urlParse() {\r\n        let params = {};\r\n        if (window.location == null) {\r\n            return params;\r\n        }\r\n        let name, value;\r\n        let str = window.location.href; //取得整个地址栏\r\n        let num = str.indexOf(\"?\")\r\n        str = str.substr(num + 1); //取得所有参数   stringlet.substr(start [, length ]\r\n\r\n        let arr = str.split(\"&\"); //各个参数放到数组里\r\n        for (let i = 0; i < arr.length; i++) {\r\n            num = arr[i].indexOf(\"=\");\r\n            if (num > 0) {\r\n                name = arr[i].substring(0, num);\r\n                value = arr[i].substr(num + 1);\r\n                params[name] = value;\r\n            }\r\n        }\r\n        return params;\r\n    };\r\n\r\n    /**\r\n     * 手动初始化生命周期\r\n     */\r\n    private initMgr() {\r\n        //g_Mgr 中的 key 值一律使用驼峰式\r\n        cc[\"appMgr\"] = {};\r\n        g_Mgr[\"appMgr\"] = {};\r\n        console.log(\"app\" + cc[\"appMgr\"]);\r\n\r\n        g_Mgr[\"userMgr\"] = new UserMgr();\r\n\r\n        g_Mgr[\"eventHandle\"] = EventHandle;\r\n\r\n        //let ReplayMgr = require(\"ReplayMgr\");\r\n        //g_Mgr[\"replayMgr\"] = new ReplayMgr();\r\n\r\n        g_Mgr[\"http\"] = Http;\r\n        g_Mgr[\"httpReqMgr\"] = new HttpReqMgr();\r\n        //g_Mgr[\"global\"] = require(\"Global\");\r\n        //g_Mgr[\"net\"] = require(\"Net\");\r\n\r\n        //let GameNetMgr = require(\"GameNetMgr\");\r\n        //g_Mgr[\"gameNetMgr\"] = new GameNetMgr();\r\n        //g_Mgr[\"gameNetMgr\"].initHandlers();\r\n\r\n        //let Utils = require(\"Utils\");\r\n        //g_Mgr[\"utils\"] = new Utils();\r\n\r\n        //let MJUtil = require(\"MJUtil\");\r\n        //g_Mgr.mjutil = new MJUtil();\r\n\r\n        //cc[\"args\"] = this.urlParse();\r\n        g_Mgr[\"args\"] = this.urlParse();\r\n    };\r\n}","/*\r\n*\ttitle: AppStart\r\n*\tdesc: 应用开始\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/06/17 \r\n*/\r\n\r\nimport AppMgr from '../manager/AppMgr';\r\n    \r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class AppStart extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    hall: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    login: cc.Node = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        AppMgr.getInstance();\r\n        //this.hall.active = false;\r\n        this.login.active = true;\r\n    }\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","/*\r\n*\ttitle: EventHandle\r\n*\tdesc: 事件管理\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/07/08 \r\n*/\r\n\r\nexport default class EventHandle {\r\n    static eventArr = {};\r\n\r\n    /**\r\n     * 判断事件是否存在，存在返回真\r\n     * @param key \r\n     */\r\n    static isNull(key): boolean {\r\n        if (this.eventArr[key] == null || this.eventArr[key] == undefined) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 添加事件\r\n     * @param key \r\n     * @param callback \r\n     */\r\n    static addEvent(key, callback) {\r\n        if (this.isNull(key)) {\r\n            return;\r\n        }\r\n        this.eventArr[key] = callback;\r\n    }\r\n\r\n    /**\r\n     * 根据 key 值删除事件\r\n     * @param key \r\n     */\r\n    static deleteEventByKey(key): boolean {\r\n        if (this.isNull(key)) {\r\n            delete this.eventArr[key];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 清空事件列表\r\n     */\r\n    static clearAllEvent() {\r\n        this.eventArr = {};\r\n    }\r\n\r\n    /**\r\n     * 执行事件\r\n     * @param key\r\n     */\r\n    static emitEvent(key) {\r\n        if (this.isNull(key)) {\r\n            let callback = this.eventArr[key];\r\n            callback();\r\n        }\r\n    }\r\n}\r\n","/*\r\n* desc：游戏选择大厅\r\n* @王全由\r\n* date：2020/6/9\r\n*/\r\n\r\nimport g_Mgr = require(\"../manager/Global\");\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class GameHall extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    preset: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    setBySelf: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    cardIntroduce: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    userName: cc.Label = null;\r\n\r\n    @property(cc.Sprite)\r\n    userPic: cc.Sprite = null;\r\n    \r\n    //profileName = g_Mgr[\"userMgr\"].properties.userName; //用户昵称\r\n    //avatarUrl = g_Mgr[\"userMgr\"].properties.avatarUrl; //用户头像\r\n    //sex = g_Mgr[\"userMgr\"].properties.sex; //性别\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        g_Mgr[\"eventHandle\"].addEvent(\"setUserInfo\", this.setUserInfo.bind(this));\r\n        this.preset.active = false;\r\n        this.setBySelf.active = false;\r\n        this.cardIntroduce.active = false;\r\n    }\r\n\r\n    start () {\r\n        //this.userPic.spriteFrame = this.avatarUrl;\r\n    }\r\n\r\n    //预设板\r\n    selectPreset(){\r\n        this.preset.active = true;\r\n        this.setBySelf.active = false;\r\n        this.cardIntroduce.active = false;\r\n    }\r\n\r\n    //自设板\r\n    selectSetBySelf(){\r\n        this.setBySelf.active = true;\r\n        this.preset.active = false;\r\n        this.cardIntroduce.active = false;\r\n    }\r\n\r\n    /**\r\n     * 打开角色身份名词解释\r\n     */\r\n    onCradDescrible(){\r\n        this.cardIntroduce.active = true;\r\n        this.preset.active = false;\r\n        this.setBySelf.active = false;\r\n    }\r\n\r\n    /**\r\n     * 关闭角色身份名词解释\r\n     */\r\n    offCradDescrible(){\r\n        this.cardIntroduce.active = false;\r\n        this.preset.active = false;\r\n        this.setBySelf.active = false;\r\n    }\r\n\r\n    setUserInfo() {\r\n        let self = this;\r\n        self.userName.string = g_Mgr[\"userMgr\"].properties.name; //用户昵称\r\n        //creator 2.4 开始废弃 loader 类\r\n        cc.loader.load({ url: g_Mgr[\"userMgr\"].properties.avatarUrl, type: \"jpg\" }, function (err, tex) {\r\n            self.userPic.spriteFrame = new cc.SpriteFrame(tex);\r\n        })\r\n        g_Mgr[\"eventHandle\"].emitEvent(\"toGameHall\");\r\n    }\r\n    // update (dt) {}\r\n}\r\n","let g_Mgr = {};\r\n\r\nexport = g_Mgr;","/*\r\n*\ttitle: HttpReqMgr\r\n*\tdesc: Http 请求接口管理\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/06/18 \r\n*/\r\nimport g_Mgr = require(\"../manager/Global\");\r\n\r\nexport default class HttpReqMgr {\r\n    http = g_Mgr[\"http\"];\r\n    /**\r\n     * 微信小游戏登录凭证校验，用 code 获取 openid\r\n     * @param code 调用微信小游戏客户端登录获取到的 code\r\n     * @param callback 回调函数\r\n     */\r\n    reqWxMiniLogin(code, callback) {\r\n        this.http.sendRequest(\"/wxmini_auth\", { code: code, os: \"wxmini\" }, callback);\r\n    }\r\n\r\n    /**\r\n     * 将客户端接口获取到的微信用户信息存入数据库\r\n     * @param userInfo \r\n     * @param callback \r\n     */\r\n    reqWxUserInfo(userInfo, callback) {\r\n        this.http.sendRequest(\"/save_userInfo\", userInfo, callback);\r\n    }\r\n\r\n    /**\r\n     * 获取预设板对应人数的角色卡\r\n     * @param playerNum \r\n     * @param callback \r\n     */\r\n    reqCardOfPreset(playerNum, callback) {\r\n        this.http.sendRequest(\"/get_card_message\", playerNum, callback, \"https://www.oldwang.top:9002\");\r\n    }\r\n}","/**\r\n*   title: Http\r\n*\tdesc: Http 请求\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/06/17 \r\n*/\r\n\r\nlet serverUrl = \"https://www.oldwang.top:9001\";\r\n\r\nlet master_url = null;\r\nlet url = null;\r\nlet token = null;\r\nlet outTimesMax = 20; //设置超时重试次数最大为20\r\nlet outTimes = 0;\r\n\r\ninit();\r\n\r\nfunction init() {\r\n    master_url = serverUrl;\r\n    url = serverUrl;\r\n};\r\n\r\n/**\r\n* \r\n* @param url \r\n*/\r\nexport function setURL(url) {\r\n    serverUrl = url;\r\n    init();\r\n};\r\n\r\n/**\r\n* \r\n* @param path \r\n* @param data \r\n* @param handler \r\n* @param extraUrl \r\n*/\r\nexport function sendRequest(path, data, handler, extraUrl): XMLHttpRequest {\r\n    let xhr = cc.loader.getXMLHttpRequest();\r\n    xhr.timeout = 5000;\r\n\r\n    if (data == null) {\r\n        data = {};\r\n    }\r\n    if (token) {\r\n        data.token = token;\r\n    }\r\n\r\n    if (extraUrl == null) {\r\n        extraUrl = url;\r\n    }\r\n\r\n    //解析请求路由以及格式化请求参数\r\n    let sendpath = path;\r\n    let sendtext = '?';\r\n    function praseData(data, sendtext) {\r\n        for (let k in data) {\r\n            if (data[k].__proto__ !== null || data[k].__proto__ !== undefined) {\r\n                praseData(data[k], sendtext);\r\n            }\r\n            if (sendtext != \"?\") {\r\n                sendtext += \"&\";\r\n            }\r\n            sendtext += (k + \"=\" + data[k]);\r\n        }\r\n        return sendtext;\r\n    }\r\n    sendtext = praseData(data, sendtext);\r\n\r\n    //组装完整的URL\r\n    let requestURL = extraUrl + sendpath + encodeURI(sendtext);\r\n\r\n    //发送请求\r\n    console.log(\"RequestURL:\" + requestURL);\r\n    //open 初始化一个请求\r\n    xhr.open(\"GET\", requestURL, true);\r\n\r\n    if (cc.sys.isNative) {\r\n        //设置 HTTP 请求头的值。必须在 open() 之后、send() 之前调用\r\n        xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n    }\r\n\r\n\r\n    function retryFunc() {\r\n        sendRequest(path, data, handler, extraUrl);\r\n        outTimes++;\r\n    };\r\n\r\n    let timer = setTimeout(function () {\r\n        xhr[\"hasRetried\"] = true;\r\n        //abort 如果请求已被发出，则立刻中止请求\r\n        xhr.abort();\r\n        console.log('http timeout, retry');\r\n        if (outTimes <= outTimesMax) {\r\n            retryFunc();\r\n        } else {\r\n            console.log(\"retry stop, fails!!!\");\r\n            outTimes = 0;\r\n        }\r\n    }, 5000);\r\n\r\n    xhr.onreadystatechange = function () {\r\n        console.log(\"当 readyState 属性发生变化时，调用的处理程序\");\r\n        clearTimeout(timer);\r\n        let ret = null;\r\n        //成功的回应，status（200– 299）\r\n        if (xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)) {\r\n            // console.log(\"http res(\" + xhr.responseText.length + \"):\" + xhr.responseText);\r\n            cc.log(\"request from [\" + xhr.responseURL + \"] data [\", ret, \"]\");\r\n            let respText = xhr.responseText;\r\n\r\n            try {\r\n                ret = JSON.parse(respText);\r\n            } catch (e) {\r\n                console.log(\"err:\" + e);\r\n                ret = {\r\n                    errcode: -10001,\r\n                    errmsg: e\r\n                };\r\n            }\r\n\r\n            if (handler) {\r\n                handler(ret);\r\n            }\r\n\r\n            handler = null;\r\n        }\r\n        else if (xhr.readyState === 4) {\r\n            if (xhr[\"hasRetried\"]) {\r\n                return;\r\n            }\r\n\r\n            console.log('other readystate == 4' + ', status:' + xhr.status);\r\n            setTimeout(function () {\r\n                retryFunc();\r\n            }, 5000);\r\n        }\r\n        else {\r\n            console.log('other readystate:' + xhr.readyState + ', status:' + xhr.status);\r\n        }\r\n    };\r\n\r\n    try {\r\n        //发送请求。如果请求是异步的（默认），那么该方法将在请求发送后立即返回\r\n        xhr.send();\r\n    }\r\n    catch (e) {\r\n        //setTimeout(retryFunc, 200);\r\n        retryFunc();\r\n    }\r\n\r\n    return xhr;\r\n};\r\n\r\n","/*\r\n* name:login\r\n* author:wangquanyou\r\n* time:2020/5/24\r\n*/\r\nimport Tools from \"../tools/Tools\"\r\nimport methodID from \"../tools/methodID\"\r\nimport g_Mgr = require(\"../manager/Global\");\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Login extends cc.Component {\r\n\r\n  @property(cc.Node)\r\n  GameHall: cc.Node = null;\r\n\r\n  @property(cc.Button)\r\n  button: cc.Button = null;\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  // onLoad () {}\r\n\r\n  start() {\r\n    //this.GameHall.active = false;\r\n    g_Mgr[\"eventHandle\"].addEvent(\"toGameHall\", this.toGameHall.bind(this));\r\n  }\r\n\r\n  /**\r\n   * 登录\r\n   */\r\n  onLogin() {\r\n    Tools.log(methodID.login, \"获取微信登录态\");\r\n    g_Mgr[\"userMgr\"].wxLogin();\r\n  }\r\n\r\n  toGameHall(){\r\n    //let loginNode = cc.find(\"Canvas/LOGIN\");\r\n    //let hallNode = cc.find(\"Canvas/GAMEHALL\");\r\n    this.node.active = false;\r\n    this.GameHall.active = true;\r\n  }\r\n  // update (dt) {}\r\n}\r\n","import g_Mgr = require(\"../manager/Global\");\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class preset extends cc.Component {\r\n\r\n    @property(cc.Slider)\r\n    Slider: cc.Slider = null;\r\n\r\n    @property(cc.Label)\r\n    playerNumLab: cc.Label = null;\r\n\r\n\r\n    playerNum: Number = 0;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 选择玩家人数\r\n     */\r\n    selectPlayerNum() {\r\n        let num = this.Slider.progress * 10;\r\n        let addPlayer = (num / (10 / 6)).toFixed(0);\r\n        this.playerNum = 6 + Number(addPlayer);\r\n        this.playerNumLab.string = String(this.playerNum);\r\n        this.getCard();\r\n    }\r\n\r\n    /**\r\n     * 根据人数获取本局身份卡\r\n     */\r\n    getCard() {\r\n        let req = { playerNum: this.playerNumLab.string };\r\n        g_Mgr[\"httpReqMgr\"].reqCardOfPreset(req, function (res) {\r\n            console.log(\"根据人数获取本局角色身份卡\");\r\n        });\r\n    }\r\n\r\n    close() {\r\n        this.node.active = false;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","/*\r\n* desc：游戏房间管理\r\n* @王全由\r\n* date：2020/7/1\r\n*/\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RoomMgr extends cc.Component {\r\n\r\n    @property(cc.ScrollView)\r\n    playerScrollView: cc.ScrollView = null;\r\n\r\n    @property(cc.Label)\r\n    roomNum: cc.Label = null;\r\n\r\n    @property(cc.Prefab)\r\n    player: cc.Prefab = null;\r\n\r\n    playerPool = [];\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.newPlayerPool();\r\n    }\r\n\r\n    start () {\r\n        this.roomNum.string = \"当前房间：\" ;\r\n    }\r\n\r\n    /**\r\n     * 创建玩家对象池\r\n     */\r\n    newPlayerPool(){\r\n        for (let i = 0; i < 12; i++) {\r\n            let node = cc.instantiate(this.player);\r\n            this.playerPool.push(node);\r\n            //this.playerScrollView.content.addChild(node);  \r\n        }\r\n    }\r\n\r\n    /**\r\n     * 新玩家进入房间\r\n     */\r\n    playerJoinRoom() {\r\n\r\n    }\r\n    // update (dt) {}\r\n}\r\n","/*\r\n*\ttitle: Selfset\r\n*\tdesc: 自设板\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/06/21 \r\n*/\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Selfset extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    close(){\r\n        this.node.active = false;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","/*\r\n* name:Tools\r\n* describe：工具类\r\n* author:wangquanyou\r\n* time:2020/5/24\r\n*/\r\n\r\nexport default class Tools {\r\n\r\n\t//日志输出\r\n\tstatic log(methodID: number, msg: string): void {\r\n\t\tif (typeof msg !== \"string\" || typeof methodID !== \"number\") {\r\n\t\t\tthrow new Error(\"Expected string or number, got right typeof parameters.\");\r\n\t\t}\r\n\t\tconsole.log(\"mthID:\" + methodID + \", \" + \"msg:\" + msg);\r\n\t}\r\n}\r\n\r\n//module.exports = Tools;","/*\r\n*\ttitle: UserMgr\r\n*\tdesc: 用户管理\r\n*\tauth: wangquanyou\r\n*\tdate: 2020/06/18 \r\n*/\r\n\r\nimport g_Mgr = require(\"./Global\");\r\nimport Tools from \"../tools/Tools\";\r\nimport methodID from \"../tools/methodID\";\r\n\r\nexport default class UserMgr {\r\n  properties = {\r\n    openid: null, //用户ID\r\n    name: null, //用户昵称\r\n    avatarUrl: null, //用户头像\r\n    sex: 0, //性别\r\n    lv: 0, //等级\r\n    exp: 0, //经验\r\n    coins: 0, //金钱\r\n    gems: 0, //房卡\r\n    sign: 0, //签名\r\n    ip: \"\", //IP\r\n    roomData: null, //房间数据\r\n    oldRoomId: null, //老房间ID\r\n    address:{\r\n      country:\"\",\r\n      province:\"\",\r\n      city:\"\",\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 微信小游戏登录\r\n   */\r\n  wxLogin() {\r\n    let self = this;\r\n    wx.login({\r\n      success(res) {\r\n        //res.code：用户登录凭证（有效期五分钟）。\r\n        //开发者需要在开发者服务器后台调用 auth.code2Session，使用 code 换取 openid 和 session_key 等信息\r\n        if (res.code) {\r\n          console.log(\"res:\" + res.code);\r\n          //授权获取玩家信息t\r\n          self.getAuthorize();\r\n          //发起微信小游戏登录凭证校验请求\r\n          g_Mgr[\"httpReqMgr\"].reqWxMiniLogin(res.code, function (data) {\r\n            let extraJson = data.extraJson;\r\n            let ret = data.ret;\r\n            if (ret.retcode == 0) {\r\n              self.properties.openid = extraJson.openid;\r\n              console.log(\"获取 openid 成功：\" + extraJson.openid);\r\n            } else {\r\n              console.log(\"获取 openid 失败:\" + ret.msg);\r\n            }\r\n          });\r\n        } else {\r\n          Tools.log(methodID.login, \"登录失败！\" + res.errMsg);\r\n        }\r\n      }\r\n    })\r\n    //cc.vv.wc.show(\"正在登录游戏\");\r\n  };\r\n\r\n  /**\r\n  * 向玩家申请授权\r\n  * 可以通过 wx.getSetting 先查询一下用户是否授权了 \"scope.record\" 这个 scope\r\n  */\r\n  getAuthorize() {\r\n    let self = this;\r\n    wx.getSetting({\r\n      success(res) {\r\n        if (!res.authSetting['scope.record']) {\r\n          wx.authorize({\r\n            scope: 'scope.userInfo',\r\n            success() {\r\n              // 用户已经同意被获取用户信息\r\n              console.log('get userInfo success');\r\n              // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框\r\n              wx.getUserInfo({\r\n                success: res => {\r\n                  let userInfo = res.userInfo; //用户信息\r\n                  self.properties.name = userInfo.nickName; //昵称\r\n                  self.properties.avatarUrl = userInfo.avatarUrl; //头像链接\r\n                  self.properties.sex = userInfo.gender; //性别 0：未知、1：男、2：女\r\n                  self.properties.address.country = userInfo.country; //国家\r\n                  self.properties.address.province = userInfo.province; //省份\r\n                  self.properties.address.city = userInfo.city; //城市\r\n                  g_Mgr[\"eventHandle\"].emitEvent(\"setUserInfo\");\r\n                  self.saveUserIfo();\r\n                  Tools.log(methodID.getUserIfo, \"获取用户信息成功：\" + userInfo);\r\n                },\r\n                fail: res => {\r\n                  console.log(\"获取用户信息失败:\" + res);\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 将微信用户信息发送给服务器，存入数据库\r\n   */\r\n  saveUserIfo() {\r\n    g_Mgr[\"httpReqMgr\"].reqWxUserInfo(this.properties, function (res) {\r\n      Tools.log(methodID.saveUserIfo, \"存储\" + res.msg);\r\n    })\r\n  };\r\n}\r\n","/*\r\n* name:methodID\r\n* describe：方法数ID\r\n* author:wangquanyou\r\n* time:2020/5/24\r\n*/\r\nexport default class methodID {\r\n\tstatic login = 111;\t//登录\r\n\tstatic getUserIfo = 112;\t//首次获取用户信息\r\n\tstatic saveUserIfo = 113;\t//保存微信用户信息\r\n}"],"file":"project.dev.js"}